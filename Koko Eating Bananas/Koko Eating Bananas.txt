#T:O(N*log(max(piles)) S:O(1)
class Solution:
    def minEatingSpeed(self, piles: List[int], h: int) -> int:
        def isPossible(k):
            hour = 0
            for i in piles:
                hour+= math.ceil(i/k)
            return hour<=h
        l = 1
        r = max(piles)
        while l<=r:
            mid = (l+r)//2
            if isPossible(mid):
                r= mid -1
            else:
                l=mid+1
        return l