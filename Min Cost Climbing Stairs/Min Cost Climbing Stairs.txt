#T: O(N) S:O(N)
#https://leetcode.com/problems/min-cost-climbing-stairs/
#dynamic programming
class Solution:
    def minCostClimbingStairs(self, cost: List[int]) -> int:
        for i in range(2,len(cost)):
            cost[i] = cost[i]+min(cost[i-1],cost[i-2])
        return min(cost[-1],cost[-2])