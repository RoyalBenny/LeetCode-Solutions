#T: O(1) S:O(N*M)
#https://leetcode.com/problems/range-sum-query-2d-immutable/
class NumMatrix:

    def __init__(self, matrix: List[List[int]]):
        rowLen,colLen = len(matrix),len(matrix[0])
        self.sumMatrix = [[0]*(colLen+1) for _ in range(rowLen+1)]
        sumMat = self.sumMatrix
        for i in range(rowLen):
            for j in range(colLen):
                sumMat[i+1][j+1] = sumMat[i][j+1]+sumMat[i+1][j]-sumMat[i][j]+matrix[i][j]
        
        

    def sumRegion(self, row1: int, col1: int, row2: int, col2: int) -> int:
        sumMat =self.sumMatrix
        output = sumMat[row2+1][col2+1]-sumMat[row2+1][col1]-sumMat[row1][col2+1]+sumMat[row1][col1]
        return output


# Your NumMatrix object will be instantiated and called as such:
# obj = NumMatrix(matrix)
# param_1 = obj.sumRegion(row1,col1,row2,col2)