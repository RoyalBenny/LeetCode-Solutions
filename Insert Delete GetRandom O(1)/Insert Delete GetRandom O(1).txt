#T: O(1) S:O(N)
class RandomizedSet:
    def __init__(self):
        self.randDict = dict()
        self.randList = []

    def insert(self, val: int) -> bool:
        if val in self.randDict:
            return False
        index = len(self.randList)
        self.randList.append(val)
        self.randDict[val] = index
        return True

    def remove(self, val: int) -> bool:
        if val not in self.randDict:
            return False
        if self.randDict[val] == len(self.randList)-1:
            self.randList.pop(-1)
            self.randDict.pop(val)
        else:
            index = self.randDict[val]
            self.randList[index] = self.randList[-1]
            lastValue = self.randList.pop(-1)
            self.randDict[lastValue] = index
            self.randDict.pop(val)
        return True
        
    def getRandom(self) -> int:
        randIndex = int(random.random()*len(self.randList))
        return self.randList[randIndex]


# Your RandomizedSet object will be instantiated and called as such:
# obj = RandomizedSet()
# param_1 = obj.insert(val)
# param_2 = obj.remove(val)
# param_3 = obj.getRandom()