#T: O(N^2) S: O(N)
#string
#https://leetcode.com/problems/palindromic-substrings/
class Solution:
    def countSubstrings(self, s: str) -> int:
        
        def countPalindrome(l,r):
            count = 0
            while l>=0 and r<len(s) and s[l] == s[r]:
                l-=1
                r+=1
                count+=1
            return count
        
        result = 0
        for i in range(len(s)):
            result+= countPalindrome(i,i)
            result+=countPalindrome(i,i+1)
        return result