#T:O(N+E) S:O(N)
class Solution:
    def isBipartite(self, graph: List[List[int]]) -> bool:
        setA,setB = set(),set()
        def isPossible(i,parentSet):
            if i in setA or i in setB:
                return i not in parentSet
            nextSet = setA if parentSet == setB else setB
            nextSet.add(i)
            for j in graph[i]:
                if not isPossible(j,nextSet):
                    return False
            return True
        for index,nodes in enumerate(graph):
            if index in setA or index in setB:
                continue
            if not isPossible(index,setA):
                return False
        return True