#T: O(N*M) S: O(N*M)
#https://leetcode.com/problems/number-of-islands/
class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        count = 0
        visited = [[False]*(len(grid[0])) for _ in range(len(grid))]
        
        def floodFill(i,j):
            if not ( 0<=i<len(grid)) or not ( 0<=j<len(grid[0])):
                return
            if visited[i][j] or  grid[i][j] == '0':
                return 
            visited[i][j] = True
            floodFill(i,j+1)
            floodFill(i,j-1)
            floodFill(i-1,j)
            floodFill(i+1,j)
        
        for i in range(len(grid)):
            for j in range(len(grid[0])):
                if grid[i][j]=='1' and not visited[i][j]:
                    count+=1
                    floodFill(i,j)

        return count