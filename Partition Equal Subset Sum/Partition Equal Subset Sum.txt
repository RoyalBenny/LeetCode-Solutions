# Roval T:O(sum(N)) S:O(sum(N)) using dp and set
class Solution:
    def canPartition(self, nums: List[int]) -> bool:
        total = sum(nums)
        if total%2 !=0:
            return False
        half = total//2
        dp = set()
        dp.add(0)
        for i in nums:
            temp = set()
            for j in dp:
                if i == half or (j+i)==half:
                    return True
                temp.add(j)
                temp.add(j+i)
            dp = temp
        return True if half in dp else False