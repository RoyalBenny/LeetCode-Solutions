#T:O(logN) S:O(N)
class TimeMap:

    def __init__(self):
        self.timeMap = defaultdict(list)

    def set(self, key: str, value: str, timestamp: int) -> None:
        self.timeMap[key].append((value,timestamp))

    def get(self, key: str, timestamp: int) -> str:
        times = self.timeMap[key]
        l,r = 0, len(times)-1
        while l<=r:
            mid = (l+r)//2
            if times[mid][1]<=timestamp:
                l=mid+1
            else:
                r=mid-1
        if r < 0:
            return ""
        return times[r][0]


# Your TimeMap object will be instantiated and called as such:
# obj = TimeMap()
# obj.set(key,value,timestamp)
# param_2 = obj.get(key,timestamp)
'''
["TimeMap","set","get","get","set","get","get","set"]
[[],["foo","bar",1],["foo",1],["foo",3],["foo","bar2",4],["foo",4],["foo",2],["duc","bar",10]]
'''