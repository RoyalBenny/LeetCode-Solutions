#T: O(N) S:O(N)
class Solution:
    def numDecodings(self, s: str) -> int:
        memo = {}
        def backtrack(index):
            if index in memo:
                return memo[index]
            if index>=len(s):
                return 1
            if s[index]=='0':
                return 0
            count = backtrack(index+1)
            if index+1<len(s) and int(s[index]+s[index+1]) !=0 and int(s[index]+s[index+1])<=26:
                count+=backtrack(index+2)
            memo[index] = count
            return count
        return backtrack(0)