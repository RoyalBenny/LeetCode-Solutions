#T:O(N) S:O(1)
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def pairSum(self, head: Optional[ListNode]) -> int:
        slow,fast = head,head.next
        while fast.next:
            slow = slow.next
            fast = fast.next.next
        prev = None
        while slow:
            nextS = slow.next
            slow.next = prev
            prev = slow
            slow = nextS
        sum = 0
        front,back = head,prev
        while front:
            sum = max(sum,front.val+back.val)
            front = front.next
            back = back.next
        return sum